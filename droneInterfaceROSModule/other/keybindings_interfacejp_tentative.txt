// Current User Interface keybindings:s
't': // take off: take off
'y': // land: hover > land > stop controller
' ': // emergency stop: emergency stop > stop controller
'h': // hover: hover > stop controller
'm': // move: move (set flying mode)
's': // set commands to zero: [open loop] hover, [closed loop] (non internal - with controller) hover
'q': // move upwards: [open loop] upwards speed command; [speed, position control] move altitude reference upwards
'a': // move downwards: same as before but downwards
'z': // (yaw) turn counter-clockwise: [open loop] turn with speed command; [any controller] move yaw reference counter-clockwise
'x': // (yaw) turn clockwise: same as before but clockwise
'\'': // set yaw reference to 0 (look parallel to x-axis)
ASCII_KEY_RIGHT: // move right, or to[+]y_axis: [open loop] or [speed command] or [position command], ignored during trayectory control
ASCII_KEY_LEFT:  // move left: [open loop] or [speed command] or [position command], ignored during trayectory control
ASCII_KEY_DOWN:  // move backwards: [open loop] or [speed command] or [position command], ignored during trayectory control
ASCII_KEY_UP:    // move frontwards; [open loop] or [speed command] or [position command], ignored during trayectory control
'j': // reset EKF: stop controller > reset EKF
'k': // stop  EKF: stop controller > stop EKF
'l': // start EKF: start EKF and setInitDroneYaw
'u': // reset controller
'i': // stop  controller: stop controller > drone_hover
'o': // start controller: start EKF > start controller
'7': // start speed controller: if controller started > drone_move > start controller (speed)
'8': // start position controller: if controller started > drone_move > start controller (position)
'9': // start trajectory controller (3D quadrilateral) using abs_trajectory_ref channel
'0': // start trajectory controller (3D quadrilateral) using rel_trajectory_ref channel

// IMAV 2013 User Interface keybindings:
[DONE] //  't': take off
[DONE] //  'y': land                ; hover > land > stop controller
[DONE] //  ' ': emergency stop      ; hover > emergency stop > stop controller
[DONE] //  'h': hover               ; hover > stop controller
[DONE] //  'm': move                ; move (set flying mode)
[DONE] //  's': set commands to zero; speed or position controller try to hover in position
[DONE] //  'q': move upwards        ; [open loop] upwards speed command; [speed, position control] move altitude reference upwards
[DONE] //  'a': move downwards      ; same but downwards
[DONE] //  'z': (yaw) turn counter-clockwise; [open loop] turn with speed command; [any controller] move yaw reference counter-clockwise
[DONE] //  'x': (yaw) turn clockwise; same but clockwise
[DONE] //  '0': set yaw reference to 0 (look north)
[DONE] //  KEY_RIGHT: move right ; [open loop] or [speed command] or [position command], ignored during trayectory control
[DONE] //  KEY_LEFT : move left  ; [open loop] or [speed command] or [position command], ignored during trayectory control
[DONE] //  KEY_DOWN : move 2back ; [open loop] or [speed command] or [position command], ignored during trayectory control
[DONE] //  KEY_UP   : move 2front; [open loop] or [speed command] or [position command], ignored during trayectory control
//no? //  'c': receive front camera image stream
//no? //  'v': receive bottom camera image stream
//no? //  KEY_DEL: exit interface
[DONE] //  'j': reset EKF, stop controller > reset EKF
[DONE] //  'k': stop  EKF, stop controller > stop EKF
[DONE] //  'l': start EKF, start EKF and setInitDroneYaw
[DONE] //  'u': reset controller
[DONE] //  'i': stop  controller
[DONE] //  'o': start controller
//no? //       NOTE: somehow 'o' by itself will not start the controller fully and the AR Drone will stay hovering.
//no? //            It is also necessary to start one of the controller clicking '7', '8' or '9'.
[DONE] //  '7': start speed      controller
[DONE] //  '8': start position   controller
[DONE] //  '9': start trajectory controller (sand-clock to left)
//no? // [OLD]  '2': Regular poligon trajectory, rand altitude commands
//no? // [OLD]  '3': Regular poligon trajectory, const altitude
//no? // [OLD]  '4': start trajectory controller (square to left and square to right)
//no? // [OLD]  '5': start trajectory controller (square to right)
//no? //  'r': go to column 1 SE
//no? //  'e': go to column 1 SW
//no? //  '3': go to column 1 NW
//no? //  '4': go to column 1 NE
